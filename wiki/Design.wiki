#summary An overview of the design

= Parts =

There are two essential parts of the project,
differing in how they are deployed and because of that they have
completely separate requirements.
  * Server side tools
  * Application

== Server side tools ==

The Server side tools run, together with the BOINC server on the CentralHost to
  * Prepare work packages
  * Accept and take care of changes in configuration, new [OpenSourceProject]s
  * Handle result from application
  * Present the result
  * Do configuration of an OpenSourceProject

Essentially these are deployed only once.

The presentation of results and the configuration of projects uses
the boinc server web pages.
Including:
  * Base url
  * Web server configuration
  * php include files
  * Database (new tables for the scospub-level results)

The presentation of results is in the html/scospres
both in the scospub project and in the installed
boinc server web pages.
It is /scospres in the URL.

The project configuration files are in html/scosconf.
/scosconf in the URL.

== Application ==

The Application is a BOINC application.
It is downloaded from the server and run on each ClientHost.

These could exist for several combinations of OS and CPU according to the BOINC
handling of different system types.

The requirements are:
  * Simple, straight-forward.
  * Linked with the BOINC library and implementing the BOINC API.

== File/Project layout ==

Configuring the clients, alternative 1:

From the SCOSPUB perspective it is the tool that is important and
not what OS project it is applied to.
This means that from the CheckHost and CheckHost administrators
perspective, he configures firstly what tools he would like to run
and then (if possible) what OpenSourceProject he wants to contribute
to.

Configuring the clients, alternative 2:

Every OpenSourceProject has its own application with tools provided
according to its configuration.

Initially we will go with alternative 2.
This is based on the Boinc documentation.

In the projects/<WHATEVER> directory on the CentralHost
the following files are installed by make in the scospub project:

  scospub/<TOOL>/<TOOL>_platform/wrapper_version_platform
  scospub/<TOOL>/<TOOL>_platform/<FILE>=<FILE>_version_platform
  scospub/<TOOL>/<TOOL>_platform/job.xml=job_version.xml
  scospub/<TOOL>/<FILE>
  scospub/<TOOL>/<TOOL>_wu
  scospub/<TOOL>/<TOOL>_result

The list of tools is defined by the scospub source.

The files from projects/<WHATEVER>/scospub are copied
by a special tool to
the projects/<WHATEVER> directory on the CentralHost:

  apps/<OSPROJ>/<TOOL>_version_platform/<TOOL>_version_platform
  apps/<OSPROJ>/<TOOL>_version_platform/<TOOL>=<TOOL>_version_platform
  apps/<OSPROJ>/<TOOL>_version_platform/job.xml=job_version.xml
  apps/<OSPROJ>/<TOOL>_version_platform/<FILE>
  templates/<TOOL>_wu
  templates/<TOOL>_result

The list of osproj is defined by the [OpenSourceProjectAdministator]s
using the web interface. These files are installed automatically.

In the slot directory on the CheckHost:
  job.xml
  stdin
  stdout
  wrapper_version_platform
  tool

In order not to affect the normal boinc handling of files,
we have a work directory where checked out files reside.
The layout is:
  /tmp/scospub/<OSPROJ>/repos/<configured paths>

All instances of applications from the same <OSPROJ> share the same
directory so
some locking or other protection mechanism
is needed to allow
multiple boinc clients.

= Other ideas =

The tool wrapper, from boinc_samples, handles a list of commands,
saving and restoring state between them, and job control.
That would be a good starting point since
we are to use a lot of exterior tools.

We should strive to create as small work packages as possible.
